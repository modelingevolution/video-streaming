
@using System.ComponentModel
@using System.Diagnostics
@using System.Globalization
@using System.Net.Sockets
@using System.Text
@using EventPi.Abstractions
@using Microsoft.CodeAnalysis.Differencing
@using Microsoft.Extensions.Configuration
@inject ServerVm _vm
@inject NavigationManager _nm
@inject PersistedStreamVm _persisterVm
@inject IConfiguration _con
<MudText Typo="Typo.h6" Class="pa-4">
    Current connections:
</MudText>
<MudSimpleTable Dense="true">
    <thead>
    <tr>
        <th>Source</th>
        <th>Recording actions</th>
    </tr>
    </thead>
    <tbody>
    <ObservableForEach ItemSource="_vm.Items">
        <tr>
            <td>@context.VideoAddress.FriendlyName</td>
            <td>
                <MudStack Row="true">
                  @if(context.VideoAddress.VideoSource == VideoSource.Camera) {
                    <MudButtonGroup Variant="Variant.Outlined" Color="Color.Primary">
                        <MudIconButton Disabled="@(_persisterVm.IsStartDisabled(context.Source.VideoAddress))"
                                       Icon="@Icons.Material.Filled.FiberManualRecord"
                                       OnClick="@(async () => { await Task.Factory.StartNew(async () => await _persisterVm.Save(context.Source.VideoAddress), TaskCreationOptions.LongRunning); })">Record</MudIconButton>
                        <MudIconButton Disabled="@(_persisterVm.IsStopDisabled(context.Source.VideoAddress))"
                                       Icon="@Icons.Material.Filled.Stop"
                                       OnClick="@(async () => await _persisterVm.Stop(context.Source.VideoAddress))">Stop</MudIconButton>
                    </MudButtonGroup>
                    <MudToggleGroup Delimiters="true"  Outlined="true" Size="Size.Small" Color="Color.Primary" @bind-Value="@_persisterVm.Format">
                        <MudToggleItem Value="@("mp4")"/>
                        <MudToggleItem Value="@("mjpeg")"/>
                    </MudToggleGroup>
                  }
                </MudStack>
            </td>
        </tr>
    </ObservableForEach>
    </tbody>
</MudSimpleTable>
<MudText Typo="Typo.h6" Class="pa-4">
    Recordings (free space: <FreeSpaceControl Path="@_persisterVm.DataDir"/> left):
</MudText>
<Observable Source="_persisterVm" Context="obs">
    <MudDataGrid Items="@_persisterVm.Files" ReadOnly="false"
                 Dense="false" EditMode="DataGridEditMode.Form" EditTrigger="DataGridEditTrigger.Manual">
        <Columns>
            <PropertyColumn Property="x => x.DisplayName" Title="Source" />
            <PropertyColumn Property="x => x.Started" Title="Created" Editable="false" />
            <PropertyColumn Property="x => x.Duration" Title="Duration" Editable="false" />
            <PropertyColumn Property="x => x.Size" Title="Size" Editable="false" />
            <TemplateColumn CellClass="d-flex justify-end" Editable="false">
                <CellTemplate>
                    <MudStack Row>
                        <MudIconButton Icon="@Icons.Material.Filled.PlayArrow" Style="padding:0" title="Play" Disabled="@(context.Item.FileName.EndsWith("mjpeg"))"
                                       OnClick="@(x=> _nm.NavigateTo($"/play/{context.Item.FileName}"))"></MudIconButton>
                        @if (_enableCameraSimulator)
                        {
                            <MudIconButton Icon="@Icons.Material.Filled.LiveTv"
                                           Style="padding:0" title="Simulate"
                                           OnClick="@(async () => await _persisterVm.ConnectToVideoFile(context.Item.FileName))"></MudIconButton>
                        }
                        <MudIconButton Icon="@Icons.Material.Filled.Edit" Style="padding:0" title="Edit" OnClick="@(async () => await context.Actions.StartEditingItemAsync())"></MudIconButton>
                        <MudIconButton Icon="@Icons.Material.Filled.Delete" Style="padding:0" title="Delete" OnClick="@context.Item.Delete"></MudIconButton>
                    </MudStack>
                </CellTemplate>
            </TemplateColumn>
        </Columns>
    </MudDataGrid>
</Observable>
@code {
    private bool _enableCameraSimulator;
    protected override void OnInitialized()
    {
        _enableCameraSimulator = _con.GetValue<bool>("EnableCameraSimulator");
    }

}
